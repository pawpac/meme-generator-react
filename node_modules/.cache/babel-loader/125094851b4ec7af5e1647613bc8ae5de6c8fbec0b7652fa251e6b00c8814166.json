{"ast":null,"code":"var _jsxFileName = \"/home/pacman/Documents/DEV/react/meme-generator-react/src/components/InputSection.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport data from '../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputSection() {\n  _s();\n  // let [memeNum, setMemeNum] = React.useState('');\n\n  const [meme, setMeme] = React.useState({\n    topLine: '',\n    bottomLine: '',\n    randomImage: 'http://i.imgflip.com/1bij.jpg'\n  });\n  const [allMemeImages, setAllMemeImages] = React.useState(data);\n  function handleClick() {\n    let randomNum = Math.floor(Math.random() * data.length);\n    const url = data[randomNum].url;\n    setMeme(prevState => ({\n      ...prevState,\n      randomImage: url\n    }));\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Generate new image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: meme.randomImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"top-text\",\n          children: \"TEST TOP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bottom-text\",\n          children: \"TEST BOTTOM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(InputSection, \"hasOLjhsELwoyOUQvqaOBsyq8rw=\");\n_c = InputSection;\n;\nexport default InputSection;\nvar _c;\n$RefreshReg$(_c, \"InputSection\");","map":{"version":3,"names":["React","data","InputSection","meme","setMeme","useState","topLine","bottomLine","randomImage","allMemeImages","setAllMemeImages","handleClick","randomNum","Math","floor","random","length","url","prevState"],"sources":["/home/pacman/Documents/DEV/react/meme-generator-react/src/components/InputSection.js"],"sourcesContent":["import React from 'react';\nimport data from '../data';\n\nfunction InputSection() {\n\n  // let [memeNum, setMemeNum] = React.useState('');\n\n  const [meme, setMeme] = React.useState({\n    topLine: '',\n    bottomLine: '',\n    randomImage: 'http://i.imgflip.com/1bij.jpg'\n  });\n\n  const [allMemeImages, setAllMemeImages] = React.useState(data);\n\n  function handleClick() {\n    let randomNum = Math.floor(Math.random() * data.length);\n    const url = data[randomNum].url;\n    setMeme(prevState => ({\n      ...prevState,\n      randomImage: url\n    }))\n  };\n  return (\n    <main>\n      <div className='form'>\n        <input type='text' placeholder='Top line' ></input>\n        <input type='text' placeholder='Bottom line'></input>\n        <button onClick={handleClick}>Generate new image</button>\n      </div>\n      <div className='meme'>\n          <div className='img-container'>\n            <img src={meme.randomImage}></img>\n          </div>\n          <div className='text'>\n            <h2 className='top-text'>TEST TOP</h2>\n            <h2 className='bottom-text'>TEST BOTTOM</h2>\n          </div>\n      </div>\n    </main>\n  );\n};\n\nexport default InputSection;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,SAAS;AAAC;AAE3B,SAASC,YAAY,GAAG;EAAA;EAEtB;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC;IACrCC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,KAAK,CAACK,QAAQ,CAACJ,IAAI,CAAC;EAE9D,SAASU,WAAW,GAAG;IACrB,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGd,IAAI,CAACe,MAAM,CAAC;IACvD,MAAMC,GAAG,GAAGhB,IAAI,CAACW,SAAS,CAAC,CAACK,GAAG;IAC/Bb,OAAO,CAACc,SAAS,KAAK;MACpB,GAAGA,SAAS;MACZV,WAAW,EAAES;IACf,CAAC,CAAC,CAAC;EACL;EAAC;EACD,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAU,eACnD;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAS,eACrD;QAAQ,OAAO,EAAEN,WAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B;IAAA;MAAA;MAAA;MAAA;IAAA,QACrD,eACN;MAAK,SAAS,EAAC,MAAM;MAAA,wBACjB;QAAK,SAAS,EAAC,eAAe;QAAA,uBAC5B;UAAK,GAAG,EAAER,IAAI,CAACK;QAAY;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA,QAC9B,eACN;QAAK,SAAS,EAAC,MAAM;QAAA,wBACnB;UAAI,SAAS,EAAC,UAAU;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eACtC;UAAI,SAAS,EAAC,aAAa;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB;MAAA;QAAA;QAAA;QAAA;MAAA,QACxC;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX;AAAC,GAtCQN,YAAY;AAAA,KAAZA,YAAY;AAsCpB;AAED,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}